name: check-auth
on:
  workflow_call:
jobs:
  refresh-tokens:
    runs-on: ubuntu-latest
    env:
      SF_API_CLIENT_ID: "${{ secrets.SF_API_CLIENT_ID }}"
      SF_API_SECRET: "${{ secrets.SF_API_SECRET }}"
      REFRESH_RUNNING: ${{ secrets.REFRESH_RUNNING }}
    steps:
      - name: Set state of refresh process
        if: always()
        id: run_refresh_state
        run: |
          # If REFRESH_RUNNING is false, set the run_refresh outputs of the current job to true
          if [ ${{ env.REFRESH_RUNNING }} == 'false' ]; then
            echo "Refresh tokens in this job"
            echo "run_refresh=true" >> $GITHUB_OUTPUT
          else 
            echo "Refresh tokens job already running in another action"
          fi
      - name: Set REFRESH_RUNNING global state to true
        uses: gliech/create-github-secret-action@v1
        if: steps.run_refresh_state.outputs.run_refresh == 'true'
        with:
          name: REFRESH_RUNNING
          value: 'true'
          pa_token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Get current value of REFRESH_RUNNING environment variable
        if: steps.run_refresh_state.outputs.run_refresh == 'true'
        run: |
          echo "REFRESH_RUNNING=true" >> $GITHUB_ENV
          echo "refresh running is ${REFRESH_RUNNING}"
      - name: Setup Node v18
        if: steps.run_refresh_state.outputs.run_refresh == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Add silverfin-cli package latest version
        if: steps.run_refresh_state.outputs.run_refresh == 'true'
        run: |
          npm install https://github.com/silverfin/silverfin-cli.git
          VERSION=$(./node_modules/silverfin-cli/bin/cli.js -V)
          echo "CLI version: ${VERSION}"
      - name: Create Silverfin config file
        if: steps.run_refresh_state.outputs.run_refresh == 'true'
        run: |
          mkdir -p $HOME/.silverfin/
          touch $HOME/.silverfin/config.json
          echo '${{ secrets.CONFIG_JSON }}' > $HOME/.silverfin/config.json
      - name: Refresh token
        if: steps.run_refresh_state.outputs.run_refresh == 'true'
        run: |
          CONFIG_JSON=$(cat $HOME/.silverfin/config.json)
          for FIRM_ID in $(echo $CONFIG_JSON | jq 'del(.defaultFirmIDs) | del(.refreshRunning) | keys[]'); do
            echo "Refreshing token for firm $FIRM_ID"
            node ./node_modules/silverfin-cli/bin/cli.js config --refresh-token $FIRM_ID
          done
      - name: Prepare CONFIG_JSON to be stored as a secret
        if: steps.run_refresh_state.outputs.run_refresh == 'true'
        run: |
          CONFIG_JSON=$(cat $HOME/.silverfin/config.json)
          CONFIG_JSON=$(echo $CONFIG_JSON | jq '.refreshRunning = false' | tr -d '\n')
          echo "CONFIG_JSON=${CONFIG_JSON}" >> $GITHUB_ENV
      - name: Store CONFIG_JSON as secret
        uses: gliech/create-github-secret-action@v1
        if: steps.run_refresh_state.outputs.run_refresh == 'true'
        with:
          name: CONFIG_JSON
          value: "${CONFIG_JSON}"
          pa_token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Set REFRESH_RUNNING to false
        uses: gliech/create-github-secret-action@v1
        if: steps.run_refresh_state.outputs.run_refresh == 'true'
        with:
          name: REFRESH_RUNNING
          value: 'false'
          pa_token: ${{ secrets.REPO_ACCESS_TOKEN }}