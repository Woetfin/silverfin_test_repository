name: check-auth
on:
  workflow_call:
jobs:
  refresh-tokens:
    runs-on: ubuntu-latest
    env:
      SF_API_CLIENT_ID: "${{ secrets.SF_API_CLIENT_ID }}"
      SF_API_SECRET: "${{ secrets.SF_API_SECRET }}"
      GITHUB_OUTPUT: ${{ github.workspace }}/output.txt
      CONFIG_JSON: ${{ secrets.CONFIG_JSON }}
    outputs:
      tokens-updated: ${{ steps.update-config.outputs.tokens-updated }}
    steps:
      - name: Update REFRESH_RUNNING environment variable state
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          script: |
            console.log(github)
            const { data: { value, id } } = await github.actions.getEnvironmentVariable({
              name: 'REFRESH_RUNNING',
              repository_id: context.payload.repository.id
            });
            await github.actions.updateEnvironmentVariable({
              name: 'REFRESH_RUNNING',
              repository_id: context.payload.repository.id,
              environment_variable_id: id,
              value: 'true'
            });
      - name: Setup Node v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Add silverfin-cli package latest version
        run: |
          npm install https://github.com/silverfin/silverfin-cli.git
          VERSION=$(./node_modules/silverfin-cli/bin/cli.js -V)
          echo "CLI version: ${VERSION}"
      - name: Load Silverfin config file from secrets
        id: silverfin-config
        run: |
          mkdir -p $HOME/.silverfin/
          echo "${CONFIG_JSON}" > $HOME/.silverfin/config.json
      - name: Check if refresh process is already running
        id: check-refresh
        run: |
          CONFIG_JSON=$(cat $HOME/.silverfin/config.json)
          REFRESH_RUNNING=$(echo $CONFIG_JSON | jq -r '.refreshRunning' // "false")
          # If no refreshRunning property is found, create it OR if refreshRunning property is found and false, in both cases, set the refreshRunning property to true and run refresh process
          if [ -z "$REFRESH_RUNNING" ] || [ "$REFRESH_RUNNING" = "false" ]; then
            echo "No refresh process running, starting it"
            CONFIG_JSON=$(echo $CONFIG_JSON | jq '.refreshRunning = "true"')
            echo "$CONFIG_JSON" > $HOME/.silverfin/config.json
            echo "run-refresh=true" >> $GITHUB_OUTPUT
          else
            # Refresh process is already running, do nothing
            echo "Refresh process already running"
            echo "run-refresh=false" >> $GITHUB_OUTPUT
          fi
      - name: Update CONFIG_JSON with refreshRunning property in secrets
        uses: gliech/create-github-secret-action@v1
        with:
          name: CONFIG_JSON
          value: "${CONFIG_JSON}"
          pa_token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Refresh token
        if: steps.check-refresh.outputs.run-refresh == 'true'
        run: |
          CONFIG_JSON=$(cat $HOME/.silverfin/config.json)
          for FIRM_ID in $(echo $CONFIG_JSON | jq 'del(.defaultFirmIDs) | del(.refreshRunning) | keys[]'); do
            echo "Refreshing token for firm $FIRM_ID"
            node ./node_modules/silverfin-cli/bin/cli.js config --set-firm $FIRM_ID
            node ./node_modules/silverfin-cli/bin/cli.js config --refresh-token
          done
      - name: Prepare CONFIG_JSON to be stored as a secret
        if: always()
        run: |
          CONFIG_JSON=$(cat $HOME/.silverfin/config.json)
          CONFIG_JSON=$(echo $CONFIG_JSON | jq '.refreshRunning = false' | tr -d '\n')
          echo "CONFIG_JSON=${CONFIG_JSON}" >> $GITHUB_ENV
      - name: Store CONFIG_JSON as secret
        uses: gliech/create-github-secret-action@v1
        if: always()
        with:
          name: CONFIG_JSON
          value: "${CONFIG_JSON}"
          pa_token: ${{ secrets.REPO_ACCESS_TOKEN }}